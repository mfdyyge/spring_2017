##########################################################
### 2005.4  yanghongjian 日志配置
##########################################################
#log4j中有五级logger
#DEBUG 7 INFO 6 WARN 4 ERROR 3 FATAL 0
#debug < zixun < warn < error < fatal

##1 定义了两个输出端
log4j.rootLogger = info,A1,A2,A3

#log4j.rootLogger = A1,A2,A3
#log4j.appender.A1.Threshold=zixun
#关闭控制台输出日志
#log4j.appender.A1.Threshold=off

#2 定义A1输出到控制器
log4j.appender.A1 = org.apache.log4j.ConsoleAppender
#3 定义A1的布局模式为PatternLayout
log4j.appender.A1.layout = org.apache.log4j.PatternLayout
#4 定义A1的输出格式
#log4j.appender.A1.layout.ConversionPattern = %-4r [%t] %-5p %c - %m%n
#%d{yyyy-MM-dd hh:mm:ss,SSS}[%-5p][%c]:%m%n
#整合平台的LOG%d{ISO8601} [%-5p][%c][%t](%r):%m%n
log4j.appender.A1.layout.ConversionPattern=%d{ISO8601}[%-5p][%c]:%m%n

##只输出指定包下的日志信息
log4j.logger.com.base = A2,A3

## 每天产生一个日志文件
log4j.appender.A2 = org.apache.log4j.DailyRollingFileAppender
#指定输出类别 fatal
log4j.appender.A2.Threshold=INFO
#6 定义A2要输出到哪一个文件
log4j.appender.A2.File = ptcore.log
log4j.appender.A2.DatePattern='_'yyyy-MM-dd'.log'
#5 定义A2输出到文件
#log4j.appender.A2 = org.apache.log4j.RollingFileAppender
#7 定义A2的输出文件的最大长度
#log4j.appender.A2.MaxFileSize = 5MB
#8 定义A2的备份文件数
#log4j.appender.A2.MaxBackupIndex = 3
#9 定义A2的布局模式为PatternLayout
log4j.appender.A2.layout = org.apache.log4j.PatternLayout
#10 定义A2的输出格式
log4j.appender.A2.layout.ConversionPattern =%d{ISO8601}[%-5p][%c]:%m%n

# 如果当前出现错误就产生一个ERROR日志文件
log4j.appender.A3 = org.apache.log4j.DailyRollingFileAppender
#指定输出类别
log4j.appender.A3.Threshold=ERROR
#6 定义A2要输出到哪一个文件
log4j.appender.A3.File = ptcore_error.log
log4j.appender.A3.DatePattern='_'yyyy-MM-dd'.log'
#5 定义A2输出到文件
#log4j.appender.A2 = org.apache.log4j.RollingFileAppender
#7 定义A2的输出文件的最大长度
#log4j.appender.A2.MaxFileSize = 5MB
#8 定义A2的备份文件数
#log4j.appender.A2.MaxBackupIndex = 3
#9 定义A2的布局模式为PatternLayout
log4j.appender.A3.layout = org.apache.log4j.PatternLayout
#10 定义A2的输出格式
log4j.appender.A3.layout.ConversionPattern =%d{ISO8601}[%-5p][%c]:%m%n

#云服务调用切面日志标识
log4j.logger.YPT=INFO
#云服务消费者切面日志标识
log4j.logger.YPT_RPC=INFO

# SqlMap logging configuration...
#log4j.logger.com.ibatis=DEBUG
#log4j.logger.com.ibatis=fatal
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=FATAL
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
log4j.logger.java.sql.Connection=DEBUG
#log4j.logger.java.sql.Connection=fatal
#log4j.logger.java.sql.Statement=DEBUG
#show SQL and Parameters or result
#需要同时设定 log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.PreparedStatement=debug
log4j.logger.java.sql.ResultSet=fatal

#spring logging configuration...
log4j.logger.org.springframework=ERROR

